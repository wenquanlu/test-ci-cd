/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    id 'application'
    id 'jacoco'
}
repositories {
    mavenCentral()
}
build {
    dependsOn clean
}
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    implementation 'com.google.guava:guava:30.1.1-jre'
}
application {
    mainClass ='jenadle.Calculator'
    }

tasks.named('test') {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}
/*
plugins {
    id 'java'
    id 'application'
}
repositories {
    jcenter()
}
dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}
test {
    useJUnitPlatform()
}
application {
    mainClass = 'jenadle.Calculator'
}*/
/*

build {
    dependsOn 'clean'
}*/
/*
build {
dependsOn 'clean'
}
*/
/*
task task1 {
    println '111'
}

task task2 {
    println '222'
}
task bune
bune {
    dependsOn task1
}

bune {
    dependsOn task2
}

task brun
brun {
dependsOn 'build'
}
brun {
dependsOn 'run'
}
*/
/*
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'jenadle.Calculator'
}

jacocoTestReport {
    reports {
        html.enabled = true
        csv.enabled = true
    }
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}

test.dependsOn(run)


task helloWorld {
    doLast {
        println 'Hello, World'
    }
}

task eat(dependsOn: helloWorld) {
    doLast {
        println 'eat'
    }
}

task initialiseDatabase
initialiseDatabase { println 'Connect to database' }

initialiseDatabase {
    doLast {
        println 'second command'
    }
}

initialiseDatabase {
    doLast {
        println 'third command'
    }
}

initialiseDatabase.doFirst({ println 'do this first' })


initialiseDatabase.doLast({ println 'do this to wrap everything up' })

initialiseDatabase.doFirst {
    println 'another way of doing first'
}

initialiseDatabase.onlyIf {
    1 == 2
}

/*
this somehow doesn't work
task copyFiles {
    fileManifest = ['data.csv', 'config.json']
}

task createArtifact(dependsOn: copyFiles) {
    doLast {
        println 'FILE IN MANIFEST: ${copyFiles.fileManifest}'
    }
}
*/

/*
task copyFile(type: Copy) {
    from 'src/main/java/jenadle'
    into 'src/main/resources'
    include '*.java'
}



task customJar(type: Jar) {
    archiveName = 'custom.jar'
    destinationDir = file('src/main/resources')
    from sourceSets.main.java
}
*/